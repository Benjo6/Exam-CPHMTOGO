version: "2.1"
services:
  authentication-db:
    image: postgres
    container_name: 'authentication-db'
    ports:
      - 3308:5432
    volumes:
      - ./init/authentication:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - cphmtogo
  payment-db:
    image: postgres
    ports:
      - 3309:5432
    volumes:
      - ./init/payments:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo

  address-db:
    image: postgres
    ports:
      - 33010:5432
    volumes:
      - ./init/addresses:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo

  restaurant-db:
    image: postgres
    ports:
      - 3311:5432
    volumes:
      - ./init/restaurants:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo

  users-db:
    image: postgres
    ports:
      - 3312:5432
    volumes:
      - ./init/users:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo

  order-db:
    image: postgres
    ports:
      - 3313:5432
    volumes:
      - ./init/orders:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: test123
    networks:
      - cphmtogo

  user-service:
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: UserService/Dockerfile
      args:
        DATABASE_PORT: 5432
        DATABASE_HOST: users-db
        DATABASE_USER: postgres
        DATABASE_PASSWORD: test123
        PORT: 5005
    depends_on:
      - "users-db"
    restart: on-failure
    command: >
      bash -c "npx prisma db push --accept-data-loss
      && npm run start"
    networks:
      - cphmtogo
    ports:
      - 5005:5005

  restaurant-service:
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: RestaurantService/Dockerfile
      args:
        DATABASE_PORT: 5432
        DATABASE_HOST: restaurant-db
        DATABASE_USER: postgres
        DATABASE_PASSWORD: test123
        PORT: 5006
    depends_on:
      - "restaurant-db"
    restart: on-failure
    command: >
      bash -c "npx prisma db push --accept-data-loss
      && npm run start"
    networks:
      - cphmtogo
    ports:
      - 5006:5006

    ##Autentication Service##
  authentication-service:
     container_name: 'cphmtogo-authentication-service'
     build:
       context: ../Exam-CPHMTOGO/CPHMTOGO
       dockerfile: AuthenticationService/Dockerfile
     deploy: 
      resources:
        limits:
          memory: 2048M
     ports:
       - 5001:80
     environment:
       DATABASE_HOST: authentication-db
       DATABASE_PORT: 5432
       DATABASE_USER: postgres
       DATABASE_PASSWORD: test123
     restart: always
     depends_on:
      - authentication-db
     networks:
      - cphmtogo
    
   ##Api Gateway##
  api-gateway:
     container_name: 'cphmtogo-api-gateway'
     build:
       context: ../Exam-CPHMTOGO/CPHMTOGO
       dockerfile: API Gateway/Dockerfile
     deploy: 
      resources:
        limits:
          memory: 2048M
     ports:
       - 5000:80

  ##Order Service##
  order-service:
    container_name: 'cphmtogo-order-service'
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: OrderService/Dockerfile
    deploy: 
      resources:  
        limits:
          memory: 2048M
    environment:
      - DATABASE_HOST=order-db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=test123
    ports:
        - 5002:80
    depends_on:
      - order-db
    restart: always
    networks:
      - cphmtogo
  
  ##Address Service##
  address-service:
    container_name: 'cphmtogo-address-service'
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: AddressService/Dockerfile
    deploy: 
      resources:  
        limits:
          memory: 2048M
    environment:
      - DATABASE_HOST=address-db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=test123
    ports:
        - 5007:80
    depends_on:
      - address-db
    restart: always
    networks:
      - cphmtogo



  ##Payment Service##
  payment-service:
    container_name: 'cphmtogo-payment-service'
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: PaymentService/Dockerfile
    deploy: 
      resources:
        limits:
          memory: 2048M
    environment:
      - StripeOptions:SecretKey=sk_test_51MAb53LP7ahF5MeN8CPV6kKlKYCwnyNU7hWmw96ATcs3wnjuDlICR6tzbxt85b6kmnAsJc5kAu9y0e9P5oGyYcQ400pwT6DpaP
    ports:
        - 5003:80
    restart: always

  ##PaymentLogging Service##
  paymentlogging-service:
    container_name: 'cphmtogo-paymentlogging-service'
    build:
      context: ../Exam-CPHMTOGO/CPHMTOGO
      dockerfile: PaymentLoggingService/Dockerfile
    deploy: 
      resources:
        limits:
          memory: 2048M
    ports:
        - 5004:80
    environment:
      - DATABASE_HOST=payment-db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=test123
    depends_on:
      - payment-db
    restart: always
    networks:
      - cphmtogo

networks:
  cphmtogo:
    driver: bridge