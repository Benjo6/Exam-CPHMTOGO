version: '3.8'
services:

## Postgres ##
  postgres:
    container_name: 'db-exam-postgres'
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    ports:
      - 15432:5432
    volumes:
     - postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: prescription_user
      POSTGRES_PASSWORD: prescription_pw

## Neo4j ##
  neo:
    container_name: db-exam-neo4j
    build: 
      context: ./neo4j
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    ports:
      - 17474:7474
      - 17687:7687
    volumes:
      - neo4j_data:/data
      - ./neo4j/logs:/logs
      #- ./neo4j/import:/var/lib/neo4j/import (uncomment if import is needed)
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*,gds.*
      - NEO4J_dbms_security_procedures_whitelist=apoc.*,algo.*,gds.*
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_AUTH=none
      - apoc.import.file.enabled=true

## Mongo ##

  mongo-conf1:
    container_name: db-exam-mongo-conf1
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: sh -c "exec mongod --port 27017 --configsvr --replSet rs-config-server --bind_ip_all"

  mongo-conf2:
    container_name: db-exam-mongo-conf2
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: sh -c "exec mongod --port 27017 --configsvr --replSet rs-config-server --bind_ip_all"

  mongo-conf3:
    container_name: db-exam-mongo-conf3
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: sh -c "exec mongod --port 27017 --configsvr --replSet rs-config-server --bind_ip_all"

  mongo-shard1-rs1:
    container_name: db-exam-mongo-shard1-rs1
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-01 --bind_ip_all
    volumes:
      - mongo_s1r1_data:/data/db

  mongo-shard1-rs2:
    container_name: db-exam-mongo-shard1-rs2
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-01 --bind_ip_all
    volumes:
      - mongo_s1r2_data:/data/db

  mongo-shard1-rs3:
    container_name: db-exam-mongo-shard1-rs3
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-01 --bind_ip_all
    volumes:
      - mongo_s1r3_data:/data/db

  mongo-shard2-rs1:
    container_name: db-exam-mongo-shard2-rs1
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-02 --bind_ip_all
    volumes:
      - mongo_s2r1_data:/data/db

  mongo-shard2-rs2:
    container_name: db-exam-mongo-shard2-rs2
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-02 --bind_ip_all
    volumes:
      - mongo_s2r2_data:/data/db

  mongo-shard2-rs3:
    container_name: db-exam-mongo-shard2-rs3
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    command: mongod --port 27017 --shardsvr --replSet rs-sh-02 --bind_ip_all
    volumes:
      - mongo_s2r3_data:/data/db

  mongo-router:
    container_name: db-exam-mongo-router
    build: 
      context: ./mongo
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    depends_on:
      - mongo-conf1
      - mongo-conf2
      - mongo-conf3
      - mongo-shard1-rs1
      - mongo-shard2-rs1
    restart: always
    ports:
      - 17017:27017
    command: mongos --port 27017 --configdb rs-config-server/mongo-conf1:27017,mongo-conf2:27017,mongo-conf3:27017 --bind_ip_all
    volumes:
      - mongo_router_data:/data/db

## Redis ##
  redis:
    container_name: db-exam-redis
    image: "redis:alpine"
    deploy:
      resources:
        limits:
          memory: 2048M
    restart: always
    ports:
      - "16379:6379"

networks:
  default:
    name: db-exam

volumes:
  postgres_data:
  mongo_router_data:
  mongo_s1r1_data:
  mongo_s1r2_data:
  mongo_s1r3_data:
  mongo_s2r1_data:
  mongo_s2r2_data:
  mongo_s2r3_data:
  neo4j_data:
