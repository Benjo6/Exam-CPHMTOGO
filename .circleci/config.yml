---
version: "2.1"
orbs:
  node: circleci/node@5.0.2
  win: circleci/windows@5.0
jobs:
  user-service:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/UserService
            yarn 
            yarn test
          name: Running Test
  restaurant-service:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/RestaurantService
            yarn 
            yarn test
          name: Running Test
  authentication-service:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/AuthenticationService
            dotnet build
          name: Building Solution
      - run:
          command: |
            cd CPHMTOGO/TestZone/AuthenticationServiceTests
            dotnet test --collect:"Code Coverage"
          name: Testing Solution with Code Coverage
      - run:
          command: |
            cd CPHMTOGO/TestZone/AuthenticationServiceTests
            chmod +x OpenCover.console.exe
          name: Giving Permissions to OpenCover Console
      - run:
          command: >
            cd CPHMTOGO/TestZone/AuthenticationServiceTests

            .\OpenCover.console.exe -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test --collect:"Code Coverage"" -register:user -output:coverage.xml
          name: Generating Code Coverage Report
      - run: null
        command: |
          cd CPHMTOGO/TestZone/AuthenticationServiceTests
          if [ $(grep -c "60.00%" coverage.xml) -eq 0 ]; then exit 1; fi
        name: Checking Code Coverage
  order-service:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/OrderService
            dotnet build
          name: Building Solution
      - run:
          command: |
            cd CPHMTOGO/TestZone/OrderServiceTests
            dotnet test
          name: Testing Solution
  payment-logging-service:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/PaymentLoggingService
            dotnet build
          name: Building Solution
      - run:
          command: |
            cd CPHMTOGO/TestZone/PaymentLoggingServiceTests
            dotnet test
          name: Testing Solution
  payment-service:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/PaymentService
            dotnet build
          name: Building Solution
      - run:
          command: |
            cd CPHMTOGO/TestZone/PaymentServiceTests
            dotnet test
          name: Testing Solution
  address-service:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: |
            cd CPHMTOGO/AddressService
            dotnet build
          name: Building Solution
workflows:
  CPHMTOGO_PIPELINE:
    jobs:
      - user-service
      - authentication-service
      - order-service
      - restaurant-service
      - payment-service
      - payment-logging-service
      - address-service
